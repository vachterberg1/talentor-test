{"ast":null,"code":"var _jsxFileName = \"/home/btqtjtle/Documents/ProjetosPessoais/IntelliStor-React/src/components/CardList/index.jsx\";\nimport React from 'react';\nimport { Container, ListCard, ImageProduct, InfosProducts, RatingInfo } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardList({\n  name,\n  description,\n  image,\n  price,\n  rating\n}) {\n  //function to convert number to a price in euro format\n  function priceToEuro(price) {\n    return price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(ListCard, {\n      children: [/*#__PURE__*/_jsxDEV(ImageProduct, {\n        src: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfosProducts, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Price: \", price.toLocaleString('de-DE', {\n            style: \"currency\",\n            currency: \"EU\",\n            minimumFractionDigits: 2\n          }), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RatingInfo, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Rating: \", rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["/home/btqtjtle/Documents/ProjetosPessoais/IntelliStor-React/src/components/CardList/index.jsx"],"names":["React","Container","ListCard","ImageProduct","InfosProducts","RatingInfo","CardList","name","description","image","price","rating","priceToEuro","toString","replace","toLocaleString","style","currency","minimumFractionDigits"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,EAA6BC,YAA7B,EAA2CC,aAA3C,EAA0DC,UAA1D,QAA2E,UAA3E;;AAEA,eAAe,SAASC,QAAT,CAAmB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,WAAP;AAAoBC,EAAAA,KAApB;AAA2BC,EAAAA,KAA3B;AAAkCC,EAAAA;AAAlC,CAAnB,EAA6D;AAC1E;AACA,WAASC,WAAT,CAAqBF,KAArB,EAA2B;AACzB,WAAOA,KAAK,CAACG,QAAN,GAAiBC,OAAjB,CAAyB,uBAAzB,EAAkD,GAAlD,CAAP;AAED;;AAED,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,QAAD;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,GAAG,EAAEL;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,aAAD;AAAA,gCACE;AAAA,oBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,gCAAYE,KAAK,CAACK,cAAN,CAAqB,OAArB,EAA8B;AAACC,YAAAA,KAAK,EAAE,UAAR;AAAoBC,YAAAA,QAAQ,EAAE,IAA9B;AAAoCC,YAAAA,qBAAqB,EAAE;AAA3D,WAA9B,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eASE,QAAC,UAAD;AAAA,+BACE;AAAA,iCAAaP,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;KAxBuBL,Q","sourcesContent":["import React from 'react'\nimport {Container, ListCard, ImageProduct, InfosProducts, RatingInfo} from './styles'\n\nexport default function CardList ({name, description, image, price, rating}){\n  //function to convert number to a price in euro format\n  function priceToEuro(price){\n    return price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n  }\n  \n  return (\n    <Container>\n      <ListCard>\n        <ImageProduct src={image}/>\n\n        <InfosProducts>\n          <h1>{name}</h1>\n          <span>{description}</span>\n          <h2>Price: {price.toLocaleString('de-DE', {style: \"currency\", currency: \"EU\", minimumFractionDigits: 2})} </h2>\n        </InfosProducts>\n\n        <RatingInfo>\n          <h1>Rating: {rating}</h1>\n        </RatingInfo>\n      </ListCard>\n    </Container>\n  )\n}"]},"metadata":{},"sourceType":"module"}